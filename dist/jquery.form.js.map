{"version":3,"file":"jquery.form.js","sources":["../src/form.js","../src/jquery.form.js"],"sourcesContent":["import _ from 'lodash'\n\nconst RULES={\n    tel:{\n        regExp:/^1[0-9]{10}$/,\n        des:'请输入有效的手机号'\n    },\n    email:{\n        regExp:/^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$/,\n        des:'请输入有效的邮箱'\n    },\n    pwd:{\n        regExp:/^[a-zA-Z0-9]{6,20}$/,\n        des:'请输入6-20位数字/字母'\n    }\n};\nconst EVENT_ALL=263;\n\n/**\n * 表单验证的主要逻辑\n * */\nclass Form{\n    /**\n     * 创建一个表单管理<br>\n     *\n     * 注意：lengthErrorTempFunc为一个方法，返回一个错误信息模版\n     * <br>自定义验证规则rules里面func和regExp同时存在时执行func，忽略regExp\n     * <br>自定义验证规则rules里面func返回一个boolean的结果\n     * @param {object} options 表单验证配置信息\n     * @param {string} options.reqErrorTemp 空错误错误信息模版\n     * @param {function} options.lengthErrorTempFunc 长度校验错误信息模版方法\n     * @param {number} options.lengthErrorTempFunc.start 最小长度\n     * @param {number} options.lengthErrorTempFunc.end 最大长度\n     * @param {number} options.lengthErrorTempFunc.type 模版类型\n     * @param {object} options.rules 自定义规则\n     * @param {object} options.rules.key 规则名称\n     * @param {RegExp} options.rules.regExp 验证规则，正则表达式\n     * @param {string} options.rules.des 描述，当验证不通过时的错误信息模版\n     * @param {function} options.rules.func 验证规则，执行后返回验证结果\n     * */\n    constructor(options){\n        /**\n         * 将options里的配置参数和默认的配置参数merge后的最终参数\n         * */\n        this.options=this._merge({},{\n            reqErrorTemp:'%s不能为空',\n            lengthErrorTempFunc:function(start,end,type){\n                //type==1:必须等于 //type==2:必须大于 //type==3:必须小于\n                var msg={\n                    1:`%s必须为${start}个字符`,\n                    2:`%s必须大于${start}个字符`,\n                    3:`%s必须小于${end}个字符`\n                };\n                return msg[type];\n            },\n            rules:RULES\n        },options);\n\n        /**\n         * 用来储存校验字段的当前校验状态，以便下次同一校验字段进行校验时直接从cache中取得校验结果\n         * @private\n         * */\n        this._cache={};\n        /**\n         * 用来缓存校验规则的解析结果\n         * @private\n         * */\n        this._ruleCache={};\n        /**\n         * 用来储存使用者对表单校验状态改变事件的监听的回调函数\n         * @deprecated\n         * event type说明:\n         *\n         * 1.all所有类型都执行回调函数\n         * 2.error校验中出现校验不通过情况，触发该事件，返回错误提示字符串，终止该字段的剩余校验过程\n         * 3.loading校验字段中存在用户自定义校验，并且调用用户自定义校验函数返回promise对象，触发该事件\n         * 4.pass执行校验的字段完成了所有的校验，并且全部通过校验\n         * @private\n         * */\n        this._events={};\n        /**\n         * middlewares用来储存使用者追加自定义表单校验规则的回调函数\n         * @private\n         * */\n        this._middlewares={};\n    }\n    /**\n     * 对字段进行校验\n     * @param {string} name 字段名\n     * @param {all} value 被校验字段的值\n     * @param {string} ruleStr 校验规则表达式\n     * @return {Promise} promise对象,验证结果如：promise.then((result)=>{})\n     * */\n    getValidateResult(name,value,ruleStr){\n        var rule=this._getRule(ruleStr);\n        var cache=this._getCache(name,value,ruleStr);\n        if(cache.status!==undefined){\n            return Promise.resolve(cache);\n        }\n        var returnResult=(result)=>{\n            result.name=name;\n            result.value=value;\n            result.rule=ruleStr;\n            this._setCache(result);\n            if(result.status===true){\n                this._triggerEvent('pass', name, value);\n            }else if(result.status===false&&result.loading===true){\n                this._triggerEvent('loading', name, value);\n            }else{\n                this._triggerEvent('error', name, value);\n            }\n            return Promise.resolve(result);\n        };\n        //空性判断\n        if(this._isEmpty(value)){\n            if(rule.req){\n                return returnResult({status:false,msg:this.options.reqErrorTemp});\n            }else{\n                return returnResult(cache.result={status:true});\n            }\n        }\n        //长度判断\n        if(value.length!=undefined&&rule.length&&rule.length.start){\n            if(rule.length.start===rule.length.end&&value.length!==rule.length.start){\n                return returnResult({status:false,msg:this.options.lengthErrorTempFunc(rule.length.start,rule.length.end,1)});\n            }\n            if(value.length<rule.length.start){\n                return returnResult({status:false,msg:this.options.lengthErrorTempFunc(rule.length.start,rule.length.end,2)});\n            }\n            if(rule.length.end&&value.length>rule.length.end){\n                return returnResult({status:false,msg:this.options.lengthErrorTempFunc(rule.length.start,rule.length.end,3)});\n            }\n        }\n        //类型判断\n        if(rule.type&&rule.type.length>0){\n            for(let key of rule.type){\n                let ruleType=this.options.rules[key];\n                if(ruleType&&ruleType.func&&typeof ruleType.func=='function'&&!ruleType.func(value)){\n                    return returnResult({status:false,msg:ruleType.des});\n                }else if(ruleType&&ruleType.regExp&&ruleType.regExp instanceof RegExp&&!ruleType.regExp.test(value)){\n                    return returnResult({status:false,msg:ruleType.des});\n                }\n            }\n        }\n        //用户自定义规则判断\n        var extraList=this._middlewares[name];\n        if(extraList&&extraList.length>0) {\n            returnResult({status:false,loading:true});\n            return Promise.all(extraList.map((extra)=>{\n                if(typeof extra=='function'){\n                    return new Promise((reslove,reject)=>{\n                        extra(value,(result)=>{\n                            if(result===true||result.status===true){\n                                reslove(result);\n                            }else{\n                                reject(result);\n                            }\n                        });\n                    });\n                }\n            })).then(()=>{\n                return returnResult({status:true});\n            },(result)=>{\n                return returnResult(result);\n            });\n        }else{\n            return returnResult({status:true});\n        }\n    }\n    /**\n     * 对一组值调用getValidateResult进行校验\n     * @param {Array} dataArray 一组被校验值，格式如getValidateResult\n     * @return {Array} promise对象数组\n     * */\n    getFormValidateResult(dataArray){\n        return Promise.all(dataArray.map((field)=>{\n            return this.getValidateResult(field.name,field.value,field.rule);\n        }));\n    }\n    /**\n     * 判断当前表单中是否存在验证不通过字段，如果传入参数值name，则判断当前字段验证是否不通过\n     * @param {string} name 字段名\n     * @return {bool} 字段是否验证不通过\n     * */\n    isError(name){\n        if(name){\n            return this._cache[name].status===false&&this._cache[name].loading!==true;\n        }\n        return this._find(this._cache,(result)=>result.status===false&&result.loading!==true);\n    }\n    /**\n     * 判断当前表单中是否存在正在进行远程校验，如果传入参数值name，则判断当前字段验证是否正在进行远程校验\n     * @param {string} name 字段名\n     * @return {bool} 字段是否正在进行远程校验\n     * */\n    isLoading(name){\n        if(name){\n            return this._cache[name].status===false&&this._cache[name].loading===true;\n        }\n        return this._find(this._cache,(result)=>result.status===false&&result.loading===true);\n    }\n    /**\n     * 判断当前表单中的全部字段是否全都验证通过，如果传入参数值name，则判断当前字段验证是否验证通过\n     * @param {string} name 字段名\n     * @return {bool} 字段是否验证通过\n     * */\n    isPass(name){\n        if(name){\n            return this._cache[name].status===true;\n        }\n        return this._every(this._cache,(result)=>result.status===true);\n    }\n    /**\n     * 清除当前字段有关的验证缓存\n     * @param {string} name 字段名\n     * @return {Form} Form对象本身\n     * */\n    clearFieldCache(name){\n        if(this._cache[name]){\n            delete this._cache[name];\n        }\n        return this;\n    }\n    /**\n     * 清除所有字段有关的验证缓存\n     * @return {Form} Form对象本身\n     * */\n    clearAllCache(){\n        this._cache={};\n        return this;\n    }\n    /**\n     * 添加事件绑定\n     * @param {string} eventName 事件名称 pass：字段验证通过事件 loading：字段开始进行远程校验 error：字段校验不通过\n     * @param {string} name 字段名称（可选）\n     * @param {function} callback 事件触发后回调\n     * @return {Form} Form对象本身\n     * */\n    on(eventName,...args){\n        var name=args[0],callback=args[args.length-1];\n        if(typeof name!=='string'){\n            name=EVENT_ALL;\n        }\n        if(typeof callback!=='function'){\n            return;\n        }\n        if(!this._events[eventName]){\n            this._events[eventName]={};\n        }\n        if(!this._events[eventName][name]){\n            this._events[eventName][name]=[];\n        }\n        this._events[eventName][name].push(callback);\n        return this;\n    }\n    /**\n     * 取消事件绑定\n     * @param {string} eventName 事件名称 pass：字段验证通过事件 loading：字段开始进行远程校验 error：字段校验不通过\n     * @param {string} name 字段名称（可选）\n     * @return {Form} Form对象本身\n     * */\n    off(eventName,name){\n        if(name){\n            if(this._events[eventName][name]){\n                this._events[eventName][name]=[];\n            }\n        }else{\n            this._events[eventName]={};\n        }\n        return this;\n    }\n    /**\n     * 追加字段的远程校验\n     * @param {string} name 字段名称，\n     * @param {function} callback 回调函数接受字段的值，返回一个验证结果对象或true\n     * @return {Form} Form对象本身\n     * */\n    use(name,callback){\n        if(typeof name!=='string'||typeof callback!=='function'){\n            return;\n        }\n\n        if(!this._middlewares[name]){\n            this._middlewares[name]=[];\n        }\n        this._middlewares[name].push(callback);\n        return this;\n    }\n    _getCache(name,value,rule){\n        var hashCode=this._getCacheCode(name,value,rule);\n        if(this._cache[hashCode]&&this._cache[hashCode].loading!==true){\n            return this._cache[hashCode];\n        }else{\n            return {};\n        }\n    }\n    _setCache(result){\n        var hashCode=this._getCacheCode(result.name,result.value,result.rule);\n        delete result['rule'];\n        this._cache[hashCode]=result;\n    }\n    _getCacheCode(name,value,rule=''){\n        if(typeof value=='object'){\n            value=JSON.stringify(value).replace(/[\\{\\}\\[\\]\\\"\\:\\,]/g,'');\n        }else{\n            value+='';\n        }\n        rule=rule.replace(/[\\-\\s]/g,'');\n        \n        return this._jsHashCode(rule+name+value);\n    }\n    _jsHashCode(key){\n        var hash=1315423911;\n        for(var i=0;i<key.length;i++){\n            hash^=(hash<<5)+key.charCodeAt(i)+(hash>>2);\n        }\n        return (hash & 0x7FFFFFFF);\n    }\n    _getRule(rule=''){\n        if(this._ruleCache[rule]){\n            return this._ruleCache[rule];\n        }\n        var _rule={};\n        rule.split(' ').forEach((n)=>{\n            if(/^required|req$/i.test(n)){\n                _rule.req=true;\n            }else if(/^[0-9]+(-[0-9]+)?$/.test(n)){\n                if(_rule.length===undefined){\n                    let [start,end]=n.split('-');\n                    let length={start:parseInt(start)};\n                    if(end){\n                        end=parseInt(end);\n                        if(start<=end){\n                            length.end=end;\n                            _rule.length=length;\n                        }\n                    }else{\n                        _rule.length=length;\n                    }\n                }\n            }else if(this.options.rules[n]){\n                if(!_rule.type){\n                    _rule.type=[];\n                }\n                _rule.type.push(n);\n            }\n        });\n        return this._ruleCache[rule]=_rule;\n    }\n    _isEmpty(value){\n        return value===undefined||value===null||value===''||value.length==0||this._isEmptyObject(value);\n    }\n    _isEmptyObject(value) {\n        return _.isObject(value)&&_.isEmpty(value);\n    }\n    _triggerEvent(eventType,name,value){\n        if(this._events[eventType]){\n            if(this._events[eventType][name]){\n                this._events[eventType][name](value,eventType,name);\n                this._events[eventType][EVENT_ALL](value,eventType,name);\n            }\n        }\n    }\n    _find(array,callback){\n       return _.find(array,callback);\n    }\n    _every(array,callback){\n        return _.every(array,callback);\n    }\n    _merge(...args){\n        return _.merge(...args);\n    }\n}\n\nexport default Form;","import Form from './form'\nimport _ from 'lodash'\nimport $ from 'jquery'\n\n/**\n * 用于jquery的UI逻辑封装\n * */\nclass JForm {\n    /**\n     * @param {Element} $el 被绑定的元素\n     * @param {Object} options 配置参数\n     * @param {string} options.fieldClass 字段选择器，用来标识一个字段\n     * @param {string} options.containerClass 字段容器选择器，用来标识字段容器，字段校验状态会添加到字段容器上\n     * @param {string} options.msgClass 字段错误信息容器选择器，用来标识字段错误信息容器，字段验证后的错误信息会显示在字段错误信息容器里面\n     * @param {string} options.errorClass 字段错误状态标识，用来把错误状态添加到字段容器上\n     * @param {bool} options.nullError 未提交表单时是否认为空状态是错误\n     * @param {function} options.callback 提交表单即调用submit方法时，表单所有字段验证通过调用该方法，参数为表单的值\n     * @param {number} options.delayTime 用户连续输入间隔多久进行下一次校验\n     * @param {bool} options.realTimeError 是否实时显示错误信息\n     * @param {Object} options.rules 自定义校验规则 参考Form里的相同参数\n     * @param {string} options.reqErrorTemp 空错误错误信息模版 参考Form里的相同参数\n     * @param {function} options.lengthErrorTempFunc 长度校验错误信息模版方法 参考Form里的相同参数\n     * */\n    constructor($el,options){\n        this.$el=$($el);\n        this.options=_.merge({},{\n            fieldClass:'J_form-field',\n            containerClass:'J_form-container',\n            msgClass:'J_form-msg',\n            errorClass:'form-error',\n            nullError:false,\n            callback:null,\n            delayTime:500,\n            realTimeError:true\n        },options);\n        this._form=new Form({\n            rules:this.options.rules,\n            reqErrorTemp:this.options.reqErrorTemp,\n            lengthErrorTempFunc:this.options.lengthErrorTempFunc\n        });\n        this._bindEvent();\n    }\n    /**\n     * 提交表单，如果有没有验证的字段则进行校验，所有字段均被校验并且全部都验证通过后执行options.callback，如果callback参数存在则执行callback，不执行options.callback\n     * @param {function} callback 所有字段验证通过后调用该方法\n     * @return {JForm} JForm对象\n     * */\n    submit(callback){\n        Promise.all([].map.call(this.$el.find(`.${this.options.fieldClass}`),(target)=>{\n            return this.validate(target);\n        })).then((results)=>{\n            var allPass=true,data={};\n            results.forEach((result)=>{\n                this.setError(result);\n                if(result.status===true){\n                    data[result.name]=result.value;\n                }else{\n                    allPass=false;\n                }\n            });\n            if(allPass){\n                if(callback){\n                    callback(data);\n                }else{\n                    this.options.callback&&this.options.callback(data);\n                }\n            }\n        });\n        return this;\n    }\n    /**\n     * 根据验证结果，向某个字段写入显示状态\n     * @param {Object} result 验证结果对象\n     * @return {JForm} JForm对象\n     * */\n    setError(result){\n        var $outer=this.$el.find(`.${this.options.containerClass}_${result.name}`),\n            $msg=this.$el.find(`.${this.options.msgClass}_${result.name}`),\n            $field=this.$el.find(`.${this.options.fieldClass}[name=\"${result.name}\"]`),\n            label=$field.attr('label');\n        if($outer.length==0){\n            $outer=$field;\n        }\n        if(result.status===true||(!this.options.nullError&&this._form._isEmpty(result.value))){\n            $outer.removeClass(this.options.errorClass);\n            $msg.html('');\n        }else{\n            $outer.addClass(this.options.errorClass);\n            $msg.html(result.msg.replace('%s',label||'该字段'));\n        }\n        return this;\n    }\n    /**\n     * 同Form.prototype.use\n     * @return {JForm} JForm对象\n     * */\n    use(...args){\n        this._form.use(...args);\n        return this;\n    }\n    /**\n     * 同Form.prototype.on\n     * @return {JForm} JForm对象\n     * */\n    on(...args){\n        this._form.on(...args);\n        return this;\n    }\n    /**\n     * 同Form.prototype.isLoading\n     * */\n    isLoading(name){\n        return this._form.isLoading(name);\n    }\n    /**\n     * 同Form.prototype.isError\n     * */\n    isError(name){\n        return this._form.isError(name);\n    }\n    /**\n     * 同Form.prototype.isPass\n     * */\n    isPass(name){\n        return this._form.isPass(name);\n    }\n    /**\n     * 对一个字段进行验证\n     * @param {Element} target 字段元素\n     * @return {Object} 验证结果对象\n     * */\n    validate(target){\n        var $target=$(target);\n        var name=$target.attr('name'),value=this._getTargetValue(target),rule=$target.attr('rule');\n        return this._form.getValidateResult(name,value,rule);\n    }\n    _setTargetValue(target,value){\n        var $target=target;\n        $target.val(value);\n    }\n    _getTargetValue(target){\n        var $target=$(target);\n        return $target.val();\n    }\n    _bindEvent(){\n        var _this=this;\n        this.$el.on('blur dataChange',`.${this.options.fieldClass}`,function(){\n            _this.validate(this).then(function(result){\n                _this.setError(result);\n            });\n        }).on('input',`.${this.options.fieldClass}`,_.debounce(function(){\n            var res=_this.validate(this);\n            if(_this.options.realTimeError){\n                res.then(function(result){\n                    _this.setError(result);\n                });\n            }\n        },this.options.delayTime)).on('focus',`.${this.options.fieldClass}`,function(){\n            _this.setError({\n                status:true,\n                name:$(this).attr('name')\n            });\n        });\n    }\n}\n\n/**\n * 注册jquery插件\n * */\n$.fn.form=function(options){\n    if($(this).length==0){\n        return new Error('选择器所选元素不能为空');\n    }\n    if($(this).length>1){\n        console.warn('选择器选中多个元素，默认只有第一个生效。请自行遍历jquery对象中的元素。');\n    }\n    return new JForm($(this)[0],options);\n}\n\nexport default JForm;"],"names":["RULES","EVENT_ALL","Form","options","_merge","start","end","type","msg","_cache","_ruleCache","_events","_middlewares","getValidateResult","name","value","ruleStr","rule","_getRule","cache","_getCache","status","undefined","Promise","resolve","returnResult","result","_setCache","_triggerEvent","loading","_isEmpty","req","reqErrorTemp","length","lengthErrorTempFunc","key","ruleType","rules","func","des","regExp","RegExp","test","extraList","all","map","extra","reslove","reject","then","getFormValidateResult","dataArray","field","isError","_find","isLoading","isPass","_every","clearFieldCache","clearAllCache","on","eventName","callback","push","off","use","hashCode","_getCacheCode","JSON","stringify","replace","_jsHashCode","hash","i","charCodeAt","_rule","split","forEach","n","parseInt","_isEmptyObject","_","isObject","isEmpty","eventType","array","find","every","merge","JForm","$el","$","_form","_bindEvent","submit","call","fieldClass","target","validate","results","allPass","data","setError","$outer","containerClass","$msg","msgClass","$field","label","attr","nullError","removeClass","errorClass","html","addClass","$target","_getTargetValue","_setTargetValue","val","_this","debounce","res","realTimeError","delayTime","fn","form","Error","warn"],"mappings":"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"}